import nmap
import datetime


def scan(target, ports, scan_type):
    print("\nStarting Scan For " + target)
    nm = nmap.PortScanner()

    if scan_type == 'TCP':
        nm.scan(target, ports, arguments='-sS --script vulners')
    elif scan_type == 'UDP':
        nm.scan(target, ports, arguments='-sU --script vulners')
    else:
        nm.scan(target, ports, arguments='-sT --script vulners')

    vulnerabilities = 0
    for host in nm.all_hosts():
        for proto in nm[host].all_protocols():
            lport = nm[host][proto].keys()
            for port in lport:
                if 'script' in nm[host][proto][port]:
                    if 'vulners' in nm[host][proto][port]['script']:
                        vulnerabilities += nm[host][proto][port]['script']['vulners'].count(
                            "VULNERABLE")

    print(f"Vulnerabilities Found: {vulnerabilities}")
    return vulnerabilities


def log(target, vulnerabilities):
    with open("log.txt", "a") as file:
        date_time = datetime.datetime.now()
        file.write(f"\nDate and Time: {date_time}")
        file.write(f"\nTarget: {target}")
        file.write(f"\nVulnerabilities Found: {vulnerabilities}")


if __name__ == "__main__":
    targets = input(
        "Enter the target(s) (comma separated if multiple, support CIDR notation for subnet scanning): ")
    targets = [target.strip() for target in targets.split(",")]

    ports = input(
        "Enter the port(s) to scan (comma separated if multiple, support range such as 22-443): ")

    print("1. TCP SYN scan\n2. UDP scan\n3. TCP connect scan")
    scan_type_option = int(input("Choose the scan type: "))
    scan_types = ['TCP', 'UDP', 'CONNECT']
    scan_type = scan_types[scan_type_option-1]

    for target in targets:
        vulnerabilities = scan(target, ports, scan_type)
        log(target, vulnerabilities)
